#!/usr/bin/env bash
# Automatic generated, DON'T MODIFY IT.

# @flag --beta-features       Enable/Disable beta features.
# @flag --no-beta-features    Enable/Disable beta features.
# @flag --debug               Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --version             Show the version and exit.
# @flag --info                Show system and dependencies information.
# @flag -h --help             Show this message and exit.

# {{ sam docs
# @cmd Launch the AWS SAM CLI documentation in a browser.
docs() {
    :;
}

# {{{ sam docs local
# @cmd
docs::local() {
    :;
}
# }}} sam docs local

# {{{ sam docs invoke
# @cmd
docs::invoke() {
    :;
}
# }}} sam docs invoke

# {{{ sam docs list
# @cmd
docs::list() {
    :;
}
# }}} sam docs list

# {{{ sam docs endpoints
# @cmd
docs::endpoints() {
    :;
}
# }}} sam docs endpoints

# {{{ sam docs resources
# @cmd
docs::resources() {
    :;
}
# }}} sam docs resources

# {{{ sam docs deploy
# @cmd
docs::deploy() {
    :;
}
# }}} sam docs deploy

# {{{ sam docs remote
# @cmd
docs::remote() {
    :;
}
# }}} sam docs remote

# {{{ sam docs package
# @cmd
docs::package() {
    :;
}
# }}} sam docs package

# {{{ sam docs delete
# @cmd
docs::delete() {
    :;
}
# }}} sam docs delete

# {{{ sam docs sync
# @cmd
docs::sync() {
    :;
}
# }}} sam docs sync

# {{{ sam docs publish
# @cmd
docs::publish() {
    :;
}
# }}} sam docs publish

# {{{ sam docs validate
# @cmd
docs::validate() {
    :;
}
# }}} sam docs validate

# {{{ sam docs init
# @cmd
docs::init() {
    :;
}
# }}} sam docs init

# {{{ sam docs logs
# @cmd
docs::logs() {
    :;
}
# }}} sam docs logs

# {{{ sam docs traces
# @cmd
docs::traces() {
    :;
}
# }}} sam docs traces
# }} sam docs

# {{ sam init
# @cmd Initialize an AWS SAM application.
# @option -n --name <TEXT>                  Name of AWS SAM Application.
# @option --architecture                    Architectures for Lambda functions.
# @option --runtime[dotnet8|dotnet6|go1]    Lambda runtime for application.
# @option --dependency-manager <DEPENDENCY_MANAGER>  Dependency manager for Lambda runtime.
# @option -l --location <TEXT>              Template location (git, mercurial, http(s), zip, path).
# @option --package-type[Zip|Image] <PACKAGE_TYPE>  Lambda deployment package type.
# @option --base-image <BASE_IMAGE>         Lambda base image for deploying IMAGE based package type.
# @option --app-template <TEXT>             Identifier of the managed application template to be used.
# @option -o --output-dir <PATH>            Directory to initialize AWS SAM application.
# @flag --no-interactive                    Disable interactive prompting for init parameters.
# @flag --no-input                          Disable Cookiecutter prompting and accept default values defined in the cookiecutter config.
# @option --extra-context <TEXT>            Override custom parameters in the template's cookiecutter.json configuration e.g. {"customParam1": "customValue1", "customParam2":"customValue2"}
# @option --config-env <TEXT>               Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>              Configuration file containing default parameter values.
# @flag --save-params                       Save the parameters provided via the command line to the configuration file.
# @flag --tracing                           Enable AWS X-Ray tracing for application.
# @flag --no-tracing                        Enable AWS X-Ray tracing for application.
# @flag --application-insights              Enable CloudWatch Application Insights monitoring for application.
# @flag --no-application-insights           Enable CloudWatch Application Insights monitoring for application.
# @flag --structured-logging                Enable Structured Logging for application.
# @flag --no-structured-logging             Enable Structured Logging for application.
# @flag --beta-features                     Enable/Disable beta features.
# @flag --no-beta-features                  Enable/Disable beta features.
# @flag --debug                             Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                           Show this message and exit.
init() {
    :;
}
# }} sam init

# {{ sam build
# @cmd Build your AWS serverless function code.
# @option -t[yaml|yml|json]                      AWS SAM template file.
# @option --template[yaml|yml|json]              AWS SAM template file.
# @option --template-file[yaml|yml|json]         AWS SAM template file.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @flag -p --parallel                            Enable parallel builds for AWS SAM template's functions and layers.
# @option -x --exclude <TEXT>                    Name of the resource(s) to exclude from AWS SAM CLI build.
# @option -m --manifest <PATH>                   Path to a custom dependency manifest.
# @flag -c                                       Enable cached builds.Reuse build artifacts that have not changed from previous builds.
# @flag --cached                                 Enable cached builds.Reuse build artifacts that have not changed from previous builds.
# @flag --no-cached                              Enable cached builds.Reuse build artifacts that have not changed from previous builds.
# @flag --build-in-source                        Opts in to build project in the source folder.
# @flag --no-build-in-source                     Opts in to build project in the source folder.
# @flag -u                                       Build functions within an AWS Lambda-like container.
# @flag --use-container                          Build functions within an AWS Lambda-like container.
# @flag --no-use-container                       Build functions within an AWS Lambda-like container.
# @option -e --container-env-var <TEXT>          Environment variables to be passed into build containers Resource format (FuncName.VarName=Value) or Global format (VarName=Value).
# @flag -ef                                      PATH Environment variables json file (e.g., env_vars.json) to be passed to containers.
# @flag --container-env-var-file                 PATH Environment variables json file (e.g., env_vars.json) to be passed to containers.
# @option -bi <TEXT>                             Container image URIs for building functions/layers.
# @option --build-image <TEXT>                   Container image URIs for building functions/layers.
# @option -mw <READ|WRITE>                       Specify mount mode for building functions/layers inside container.
# @option --mount-with <READ|WRITE>              Specify mount mode for building functions/layers inside container.
# @flag --skip-pull-image                        Skip pulling down the latest Docker image for Lambda runtime.
# @option --docker-network <TEXT>                Name or ID of an existing docker network for AWS Lambda docker containers to connect to, along with the default bridge network.
# @flag --mount-symlinks                         Specify if symlinks at the top level of the code should be mounted inside the container.
# @flag --no-mount-symlinks                      Specify if symlinks at the top level of the code should be mounted inside the container.
# @option -b --build-dir <DIRECTORY>             Directory to store build artifacts.Note: This directory will be first removed before starting a build.
# @option -cd <DIRECTORY>                        Directory to store cached artifacts.
# @option --cache-dir <DIRECTORY>                Directory to store cached artifacts.
# @option -s --base-dir <DIRECTORY>              Resolve relative paths to function's source code with respect to this directory.
# @option --hook-name <TEXT>                     Hook package id to extend AWS SAM CLI commands functionality.
# @flag --skip-prepare-infra                     Skip preparation stage when there are no infrastructure changes.
# @flag --prepare-infra                          Skip preparation stage when there are no infrastructure changes.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @flag --terraform-project-root-path            PATH Used for passing the Terraform project root directory path.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                                Show this message and exit.
# @arg resource_logical_id
build() {
    :;
}
# }} sam build

# {{ sam local
# @cmd Run your AWS serverless function locally.
# @flag -h --help    Show this message and exit.
local() {
    :;
}

# {{{ sam local generate-event
# @cmd Generate events for Lambda functions.
local::generate-event() {
    :;
}

# {{{{ sam local generate-event alexa-skills-kit
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::alexa-skills-kit() {
    :;
}

# {{{{{ sam local generate-event alexa-skills-kit end-session
# @cmd Generates an Amazon Alexa End Session Event
# @option --session-id <TEXT>        Specify the session-id name you'd like, otherwise the default = 123456789012
# @option --user-id <TEXT>           Specify the user-id name you'd like, otherwise the default = testUser
# @option --application-id <TEXT>    Specify the application-id name you'd like, otherwise the default = 987654321
# @option --request-id <TEXT>        Specify the request-id name you'd like, otherwise the default = 1234
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::alexa-skills-kit::end-session() {
    :;
}
# }}}}} sam local generate-event alexa-skills-kit end-session

# {{{{{ sam local generate-event alexa-skills-kit intent-answer
# @cmd Generates an Amazon Alexa Intent Answer Event
# @option --session-id <TEXT>        Specify the session-id name you'd like, otherwise the default = 123456789012
# @option --user-id <TEXT>           Specify the user-id name you'd like, otherwise the default = testUser
# @option --application-id <TEXT>    Specify the application-id name you'd like, otherwise the default = 987654321
# @option --request-id <TEXT>        Specify the request-id name you'd like, otherwise the default = 1234
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::alexa-skills-kit::intent-answer() {
    :;
}
# }}}}} sam local generate-event alexa-skills-kit intent-answer

# {{{{{ sam local generate-event alexa-skills-kit intent-getnewfact
# @cmd Generates an Amazon Alexa Intent GetNewFact Event
# @option --session-id <TEXT>        Specify the session-id name you'd like, otherwise the default = 123456789012
# @option --user-id <TEXT>           Specify the user-id name you'd like, otherwise the default = testUser
# @option --application-id <TEXT>    Specify the application-id name you'd like, otherwise the default = 987654321
# @option --request-id <TEXT>        Specify the request-id name you'd like, otherwise the default = 1234
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::alexa-skills-kit::intent-getnewfact() {
    :;
}
# }}}}} sam local generate-event alexa-skills-kit intent-getnewfact

# {{{{{ sam local generate-event alexa-skills-kit intent-mycoloris
# @cmd Generates an Amazon Alexa Intent MyColorIs Event
# @option --session-id <TEXT>        Specify the session-id name you'd like, otherwise the default = 123456789012
# @option --user-id <TEXT>           Specify the user-id name you'd like, otherwise the default = testUser
# @option --application-id <TEXT>    Specify the application-id name you'd like, otherwise the default = 987654321
# @option --request-id <TEXT>        Specify the request-id name you'd like, otherwise the default = 1234
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::alexa-skills-kit::intent-mycoloris() {
    :;
}
# }}}}} sam local generate-event alexa-skills-kit intent-mycoloris

# {{{{{ sam local generate-event alexa-skills-kit intent-recipe
# @cmd Generates an Amazon Alexa Intent Recipe Event
# @option --session-id <TEXT>        Specify the session-id name you'd like, otherwise the default = 123456789012
# @option --user-id <TEXT>           Specify the user-id name you'd like, otherwise the default = testUser
# @option --application-id <TEXT>    Specify the application-id name you'd like, otherwise the default = 987654321
# @option --request-id <TEXT>        Specify the request-id name you'd like, otherwise the default = 1234
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::alexa-skills-kit::intent-recipe() {
    :;
}
# }}}}} sam local generate-event alexa-skills-kit intent-recipe

# {{{{{ sam local generate-event alexa-skills-kit start-session
# @cmd Generates an Amazon Alexa Start Session Event
# @option --session-id <TEXT>        Specify the session-id name you'd like, otherwise the default = 123456789012
# @option --user-id <TEXT>           Specify the user-id name you'd like, otherwise the default = testUser
# @option --application-id <TEXT>    Specify the application-id name you'd like, otherwise the default = 987654321
# @option --request-id <TEXT>        Specify the request-id name you'd like, otherwise the default = 1234
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::alexa-skills-kit::start-session() {
    :;
}
# }}}}} sam local generate-event alexa-skills-kit start-session
# }}}} sam local generate-event alexa-skills-kit

# {{{{ sam local generate-event alexa-smart-home
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::alexa-smart-home() {
    :;
}

# {{{{{ sam local generate-event alexa-smart-home smart-home-control-turn-off-request
# @cmd Generates an Amazon Alexa Smart Home Control Turn Off Request Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::alexa-smart-home::smart-home-control-turn-off-request() {
    :;
}
# }}}}} sam local generate-event alexa-smart-home smart-home-control-turn-off-request

# {{{{{ sam local generate-event alexa-smart-home smart-home-control-turn-on-request
# @cmd Generates an Amazon Alexa Smart Home Control Turn On Request Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::alexa-smart-home::smart-home-control-turn-on-request() {
    :;
}
# }}}}} sam local generate-event alexa-smart-home smart-home-control-turn-on-request

# {{{{{ sam local generate-event alexa-smart-home smart-home-discovery-request
# @cmd Generates an Amazon Alexa Smart Home Discovery Request Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::alexa-smart-home::smart-home-discovery-request() {
    :;
}
# }}}}} sam local generate-event alexa-smart-home smart-home-discovery-request
# }}}} sam local generate-event alexa-smart-home

# {{{{ sam local generate-event alb
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::alb() {
    :;
}

# {{{{{ sam local generate-event alb request
# @cmd Generates an Application Load Balancer Event
# @option --body <TEXT>           Specify the body name you'd like, otherwise the default = {"test":"body"}
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = POST
# @option --path <TEXT>           Specify the path name you'd like, otherwise the default = path/to/resource
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --dns-suffix <TEXT>     Specify the dns-suffix name you'd like, otherwise the default = us-east-2.elb.amazonaws.com
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::alb::request() {
    :;
}
# }}}}} sam local generate-event alb request
# }}}} sam local generate-event alb

# {{{{ sam local generate-event apigateway
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::apigateway() {
    :;
}

# {{{{{ sam local generate-event apigateway authorizer
# @cmd Generates an Amazon API Gateway Authorizer Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --stage <TEXT>          Specify the stage name you'd like, otherwise the default = prod
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = POST
# @option --resource <TEXT>       Specify the resource name you'd like, otherwise the default = {proxy+}
# @option --restApiId <TEXT>      Specify the restApiId name you'd like, otherwise the default = example
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::apigateway::authorizer() {
    :;
}
# }}}}} sam local generate-event apigateway authorizer

# {{{{{ sam local generate-event apigateway aws-proxy
# @cmd Generates an Amazon API Gateway AWS Proxy Event
# @option --body <TEXT>           Specify the body name you'd like, otherwise the default = {"test":"body"}
# @option --stage <TEXT>          Specify the stage name you'd like, otherwise the default = prod
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = POST
# @option --resource <TEXT>       Specify the resource name you'd like, otherwise the default = /{proxy+}
# @option --path <TEXT>           Specify the path name you'd like, otherwise the default = path/to/resource
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --dns-suffix <TEXT>     Specify the dns-suffix name you'd like, otherwise the default = us-east-1.amazonaws.com
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::apigateway::aws-proxy() {
    :;
}
# }}}}} sam local generate-event apigateway aws-proxy

# {{{{{ sam local generate-event apigateway http-api-proxy
# @cmd Generates an Amazon API Gateway Http API Event
# @option --body <TEXT>           Specify the body name you'd like, otherwise the default = {"test":"body"}
# @option --stage <TEXT>          Specify the stage name you'd like, otherwise the default = $default
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = POST
# @option --path <TEXT>           Specify the path name you'd like, otherwise the default = path/to/resource
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --dns-suffix <TEXT>     Specify the dns-suffix name you'd like, otherwise the default = us-east-1.amazonaws.com
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::apigateway::http-api-proxy() {
    :;
}
# }}}}} sam local generate-event apigateway http-api-proxy

# {{{{{ sam local generate-event apigateway request-authorizer
# @cmd Generates an Amazon API Gateway Request Authorizer Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --stage <TEXT>          Specify the stage name you'd like, otherwise the default = test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @option --resource <TEXT>       Specify the resource name you'd like, otherwise the default = request
# @option --restApiId <TEXT>      Specify the restApiId name you'd like, otherwise the default = abcdef123
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::apigateway::request-authorizer() {
    :;
}
# }}}}} sam local generate-event apigateway request-authorizer
# }}}} sam local generate-event apigateway

# {{{{ sam local generate-event appsync
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::appsync() {
    :;
}

# {{{{{ sam local generate-event appsync resolver
# @cmd Generates an AWS AppSync Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::appsync::resolver() {
    :;
}
# }}}}} sam local generate-event appsync resolver
# }}}} sam local generate-event appsync

# {{{{ sam local generate-event batch
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::batch() {
    :;
}

# {{{{{ sam local generate-event batch get-job
# @cmd Generates an AWS Batch Get Job Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::batch::get-job() {
    :;
}
# }}}}} sam local generate-event batch get-job

# {{{{{ sam local generate-event batch submit-job
# @cmd Generates an AWS Batch Submit Job Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::batch::submit-job() {
    :;
}
# }}}}} sam local generate-event batch submit-job
# }}}} sam local generate-event batch

# {{{{ sam local generate-event cloudformation
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::cloudformation() {
    :;
}

# {{{{{ sam local generate-event cloudformation create-request
# @cmd Generates an AWS CloudFormation Create Request Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --stack <TEXT>          Specify the stack name you'd like, otherwise the default = MyStack
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudformation::create-request() {
    :;
}
# }}}}} sam local generate-event cloudformation create-request
# }}}} sam local generate-event cloudformation

# {{{{ sam local generate-event cloudfront
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::cloudfront() {
    :;
}

# {{{{{ sam local generate-event cloudfront ab-test
# @cmd Generates an Amazon CloudFront A/B Test Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::ab-test() {
    :;
}
# }}}}} sam local generate-event cloudfront ab-test

# {{{{{ sam local generate-event cloudfront access-request-in-response
# @cmd Generates an Amazon CloudFront Access Request in Response Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::access-request-in-response() {
    :;
}
# }}}}} sam local generate-event cloudfront access-request-in-response

# {{{{{ sam local generate-event cloudfront http-redirect
# @cmd Generates an Amazon CloudFront HTTP Redirect Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::http-redirect() {
    :;
}
# }}}}} sam local generate-event cloudfront http-redirect

# {{{{{ sam local generate-event cloudfront modify-querystring
# @cmd Generates an Amazon CloudFront Modify QueryString Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::modify-querystring() {
    :;
}
# }}}}} sam local generate-event cloudfront modify-querystring

# {{{{{ sam local generate-event cloudfront modify-response-header
# @cmd Generates an Amazon CloudFront Modify Response Header Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::modify-response-header() {
    :;
}
# }}}}} sam local generate-event cloudfront modify-response-header

# {{{{{ sam local generate-event cloudfront multiple-remote-calls-aggregate-response
# @cmd Generates an Amazon CloudFront Multiple Remote Calls Aggregate Response Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /forecast/Seattle:NewYork:Chicago:SanFrancisco
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::multiple-remote-calls-aggregate-response() {
    :;
}
# }}}}} sam local generate-event cloudfront multiple-remote-calls-aggregate-response

# {{{{{ sam local generate-event cloudfront normalize-querystring-to-improve-cache-hit
# @cmd Generates an Amazon CloudFront Normalize Querystring Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::normalize-querystring-to-improve-cache-hit() {
    :;
}
# }}}}} sam local generate-event cloudfront normalize-querystring-to-improve-cache-hit

# {{{{{ sam local generate-event cloudfront redirect-on-viewer-country
# @cmd Generates an Amazon CloudFront Redirect on Viewer Country Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::redirect-on-viewer-country() {
    :;
}
# }}}}} sam local generate-event cloudfront redirect-on-viewer-country

# {{{{{ sam local generate-event cloudfront redirect-unauthenticated-users
# @cmd Generates an Amazon CloudFront Redirect Unauthenticated Users Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::redirect-unauthenticated-users() {
    :;
}
# }}}}} sam local generate-event cloudfront redirect-unauthenticated-users

# {{{{{ sam local generate-event cloudfront response-generation
# @cmd Generates an Amazon CloudFront Response Generation Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::response-generation() {
    :;
}
# }}}}} sam local generate-event cloudfront response-generation

# {{{{{ sam local generate-event cloudfront serve-object-on-viewer-device
# @cmd Generates an Amazon CloudFront Serve Object on Viewer Device Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::serve-object-on-viewer-device() {
    :;
}
# }}}}} sam local generate-event cloudfront serve-object-on-viewer-device

# {{{{{ sam local generate-event cloudfront simple-remote-call
# @cmd Generates an Amazon CloudFront Simple Remote Call Event
# @option --uri <TEXT>            Specify the uri name you'd like, otherwise the default = /test
# @option --method <TEXT>         Specify the method name you'd like, otherwise the default = GET
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudfront::simple-remote-call() {
    :;
}
# }}}}} sam local generate-event cloudfront simple-remote-call
# }}}} sam local generate-event cloudfront

# {{{{ sam local generate-event codecommit
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::codecommit() {
    :;
}

# {{{{{ sam local generate-event codecommit repository
# @cmd Generates an AWS CodeCommit Repository Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --repository <TEXT>     Specify the repository name you'd like, otherwise the default = my-repo
# @option --trigger <TEXT>        Specify the trigger name you'd like, otherwise the default = my-trigger
# @option --custom-data <TEXT>    Specify the custom-data name you'd like, otherwise the default = this is custom data
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::codecommit::repository() {
    :;
}
# }}}}} sam local generate-event codecommit repository
# }}}} sam local generate-event codecommit

# {{{{ sam local generate-event codepipeline
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::codepipeline() {
    :;
}

# {{{{{ sam local generate-event codepipeline job
# @cmd Generates an AWS CodePipeline Job Event
# @option --account-id <TEXT>       Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --input-bucket <TEXT>     Specify the input-bucket name you'd like, otherwise the default = example-bucket
# @option --input-key <TEXT>        Specify the input-key name you'd like, otherwise the default = test/key
# @option --output-bucket <TEXT>    Specify the output-bucket name you'd like, otherwise the default = example-bucket2
# @option --output-key <TEXT>       Specify the output-key name you'd like, otherwise the default = test/key2
# @flag --debug                     Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>      Configuration file containing default parameter values.
# @option --config-env <TEXT>       Environment name specifying default parameter values in the configuration file.
# @flag -h --help                   Show this message and exit.
local::generate-event::codepipeline::job() {
    :;
}
# }}}}} sam local generate-event codepipeline job
# }}}} sam local generate-event codepipeline

# {{{{ sam local generate-event cognito
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::cognito() {
    :;
}

# {{{{{ sam local generate-event cognito sync-trigger
# @cmd Generates an Amazon Cognito Sync Trigger Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cognito::sync-trigger() {
    :;
}
# }}}}} sam local generate-event cognito sync-trigger
# }}}} sam local generate-event cognito

# {{{{ sam local generate-event config
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::config() {
    :;
}

# {{{{{ sam local generate-event config item-change-notification
# @cmd Generates an AWS Config Configuration Item Change Notification Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::config::item-change-notification() {
    :;
}
# }}}}} sam local generate-event config item-change-notification

# {{{{{ sam local generate-event config oversized-item-change-notification
# @cmd Generates an AWS Config Oversized Configuration Item Change Notification Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::config::oversized-item-change-notification() {
    :;
}
# }}}}} sam local generate-event config oversized-item-change-notification

# {{{{{ sam local generate-event config periodic-rule
# @cmd Generates an AWS Config Periodic Rule Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::config::periodic-rule() {
    :;
}
# }}}}} sam local generate-event config periodic-rule
# }}}} sam local generate-event config

# {{{{ sam local generate-event connect
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::connect() {
    :;
}

# {{{{{ sam local generate-event connect contact-flow-event
# @cmd Generates an Amazon Connect Contact Flow Event
# @option --region <TEXT>          Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>       Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>      Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --contact-id <TEXT>      Specify the contact-id name you'd like, otherwise the default = 5ca32fbd-8f92-46af-92a5-6b0f970f0efe
# @option --phone-number <TEXT>    Specify the phone-number name you'd like, otherwise the default = +11234567890
# @flag --debug                    Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>     Configuration file containing default parameter values.
# @option --config-env <TEXT>      Environment name specifying default parameter values in the configuration file.
# @flag -h --help                  Show this message and exit.
local::generate-event::connect::contact-flow-event() {
    :;
}
# }}}}} sam local generate-event connect contact-flow-event
# }}}} sam local generate-event connect

# {{{{ sam local generate-event dynamodb
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::dynamodb() {
    :;
}

# {{{{{ sam local generate-event dynamodb update
# @cmd Generates an Amazon DynamoDB Update Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --table <TEXT>          Specify the table name you'd like, otherwise the default = ExampleTableWithStream
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::dynamodb::update() {
    :;
}
# }}}}} sam local generate-event dynamodb update
# }}}} sam local generate-event dynamodb

# {{{{ sam local generate-event cloudwatch
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::cloudwatch() {
    :;
}

# {{{{{ sam local generate-event cloudwatch logs
# @cmd Generates an Amazon Cloudwatch Logs Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudwatch::logs() {
    :;
}
# }}}}} sam local generate-event cloudwatch logs

# {{{{{ sam local generate-event cloudwatch scheduled-event
# @cmd Generates an Amazon CloudWatch Events Scheduled Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --rule <TEXT>           Specify the rule name you'd like, otherwise the default = ExampleRule
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::cloudwatch::scheduled-event() {
    :;
}
# }}}}} sam local generate-event cloudwatch scheduled-event
# }}}} sam local generate-event cloudwatch

# {{{{ sam local generate-event kinesis
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::kinesis() {
    :;
}

# {{{{{ sam local generate-event kinesis analytics
# @cmd Generates an Amazon Kinesis Data Analytics Event
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --application <TEXT>    Specify the application name you'd like, otherwise the default = example-application
# @option --stream <TEXT>         Specify the stream name you'd like, otherwise the default = example-stream
# @option --data <TEXT>           Specify the data name you'd like, otherwise the default = This is a test from Kinesis Analytics
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::analytics() {
    :;
}
# }}}}} sam local generate-event kinesis analytics

# {{{{{ sam local generate-event kinesis analytics-compressed
# @cmd Generates an Amazon Kinesis Data Analytics Compressed Event
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --application <TEXT>    Specify the application name you'd like, otherwise the default = example-application
# @option --stream <TEXT>         Specify the stream name you'd like, otherwise the default = example-stream
# @option --data <TEXT>           Specify the data name you'd like, otherwise the default = H4sIAAAAAAAA/6vmUspLzE1VslLKTsxNzFHS4VJKTEkpSi0uBgol5S RmKHHVAgDd1tysJAAAAA==
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::analytics-compressed() {
    :;
}
# }}}}} sam local generate-event kinesis analytics-compressed

# {{{{{ sam local generate-event kinesis analytics-dynamodb
# @cmd Generates an Amazon Kinesis Data Analytics DynamoDB Event
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --application <TEXT>    Specify the application name you'd like, otherwise the default = example-application
# @option --stream <TEXT>         Specify the stream name you'd like, otherwise the default = example-stream
# @option --data <TEXT>           Specify the data name you'd like, otherwise the default = {"ROWTIME_TIMESTAMP":"2017-12-15 01:09:50.000","VEHICLEID":"5","VEHICLECOUNT":18}
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::analytics-dynamodb() {
    :;
}
# }}}}} sam local generate-event kinesis analytics-dynamodb

# {{{{{ sam local generate-event kinesis analytics-kpl
# @cmd Generates an Amazon Kinesis Data Analytics KPL Event
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --application <TEXT>    Specify the application name you'd like, otherwise the default = example-application
# @option --stream <TEXT>         Specify the stream name you'd like, otherwise the default = example-stream
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::analytics-kpl() {
    :;
}
# }}}}} sam local generate-event kinesis analytics-kpl

# {{{{{ sam local generate-event kinesis apachelog
# @cmd Generates an Amazon Kinesis Data Firehose Apachelog Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --data <TEXT>           Specify the data name you'd like, otherwise the default = NjQuMjQyLjg4LjEwIC0gLSBbMDcvTWFyLzIwMDQ6MTY6MTA6MDIgLT A4MDBdICJHRVQgL21haWxtYW4vbGlzdGluZm8vaHNkaXZpc2lvbiBIVF RQLzEuMSIgMjAwIDYyOTE==
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::apachelog() {
    :;
}
# }}}}} sam local generate-event kinesis apachelog

# {{{{{ sam local generate-event kinesis cloudwatch-logs-processor
# @cmd Generates an Amazon Kinesis Data Firehose Cloudwatch Logs Processor Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::cloudwatch-logs-processor() {
    :;
}
# }}}}} sam local generate-event kinesis cloudwatch-logs-processor

# {{{{{ sam local generate-event kinesis get-records
# @cmd Generates an Amazon Kinesis Data Stream Event
# @option --region <TEXT>           Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>        Specify the partition name you'd like, otherwise the default = aws
# @option --sequence <TEXT>         Specify the sequence name you'd like, otherwise the default = 49545115243490985018280067714973144582180062 593244200961
# @option --data <TEXT>             Specify the data name you'd like, otherwise the default = Hello, this is a test 123.
# @option --partition-key <TEXT>    Specify the partition-key name you'd like, otherwise the default = partitionKey-03
# @flag --debug                     Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>      Configuration file containing default parameter values.
# @option --config-env <TEXT>       Environment name specifying default parameter values in the configuration file.
# @flag -h --help                   Show this message and exit.
local::generate-event::kinesis::get-records() {
    :;
}
# }}}}} sam local generate-event kinesis get-records

# {{{{{ sam local generate-event kinesis kinesis-firehose
# @cmd Generates an Amazon Kinesis Data Firehose Event
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --data <TEXT>           Specify the data name you'd like, otherwise the default = SGVsbG8sIHRoaXMgaXMgYSB0ZXN0IDEyMy4=
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::kinesis-firehose() {
    :;
}
# }}}}} sam local generate-event kinesis kinesis-firehose

# {{{{{ sam local generate-event kinesis streams-as-source
# @cmd Generates an Amazon Kinesis Data Firehose Streams as Source Event
# @option --partition <TEXT>        Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>           Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition-key <TEXT>    Specify the partition-key name you'd like, otherwise the default = partitionKey-03
# @option --data <TEXT>             Specify the data name you'd like, otherwise the default = SGVsbG8sIHRoaXMgaXMgYSB0ZXN0IDEyMy4=
# @option --sequence <TEXT>         Specify the sequence name you'd like, otherwise the default = 49545115243490985018280067714973144582180062 593244200961
# @flag --debug                     Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>      Configuration file containing default parameter values.
# @option --config-env <TEXT>       Environment name specifying default parameter values in the configuration file.
# @flag -h --help                   Show this message and exit.
local::generate-event::kinesis::streams-as-source() {
    :;
}
# }}}}} sam local generate-event kinesis streams-as-source

# {{{{{ sam local generate-event kinesis syslog
# @cmd Generates an Amazon Kinesis Data Firehose Syslog Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --data <TEXT>           Specify the data name you'd like, otherwise the default = SGVsbG8sIHRoaXMgaXMgYSB0ZXN0IDEyMy4=
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::kinesis::syslog() {
    :;
}
# }}}}} sam local generate-event kinesis syslog
# }}}} sam local generate-event kinesis

# {{{{ sam local generate-event lex
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::lex() {
    :;
}

# {{{{{ sam local generate-event lex book-car
# @cmd Generates an Amazon Lex Book Car Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex::book-car() {
    :;
}
# }}}}} sam local generate-event lex book-car

# {{{{{ sam local generate-event lex book-hotel
# @cmd Generates an Amazon Lex Book Hotel Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex::book-hotel() {
    :;
}
# }}}}} sam local generate-event lex book-hotel

# {{{{{ sam local generate-event lex make-appointment
# @cmd Generates an Amazon Lex Make Appointment Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex::make-appointment() {
    :;
}
# }}}}} sam local generate-event lex make-appointment

# {{{{{ sam local generate-event lex order-flowers
# @cmd Generates an Amazon Lex Order Flowers Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex::order-flowers() {
    :;
}
# }}}}} sam local generate-event lex order-flowers
# }}}} sam local generate-event lex

# {{{{ sam local generate-event lex-v2
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::lex-v2() {
    :;
}

# {{{{{ sam local generate-event lex-v2 banking-bot
# @cmd Generates an Amazon Lex V2 Banking Bot Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex-v2::banking-bot() {
    :;
}
# }}}}} sam local generate-event lex-v2 banking-bot

# {{{{{ sam local generate-event lex-v2 book-car
# @cmd Generates an Amazon Lex V2 Book Car Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex-v2::book-car() {
    :;
}
# }}}}} sam local generate-event lex-v2 book-car

# {{{{{ sam local generate-event lex-v2 book-hotel
# @cmd Generates an Amazon Lex V2 Book Hotel Event
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::lex-v2::book-hotel() {
    :;
}
# }}}}} sam local generate-event lex-v2 book-hotel
# }}}} sam local generate-event lex-v2

# {{{{ sam local generate-event rekognition
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::rekognition() {
    :;
}

# {{{{{ sam local generate-event rekognition s3-request
# @cmd Generates an Amazon Rekognition S3 Request Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --bucket <TEXT>         Specify the bucket name you'd like, otherwise the default = example-bucket
# @option --key <TEXT>            Specify the key name you'd like, otherwise the default = test/key
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::rekognition::s3-request() {
    :;
}
# }}}}} sam local generate-event rekognition s3-request
# }}}} sam local generate-event rekognition

# {{{{ sam local generate-event s3
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::s3() {
    :;
}

# {{{{{ sam local generate-event s3 batch-invocation
# @cmd Generates an Amazon S3 Batch Operations Invocation Event
# @option --bucket-arn <TEXT>     Specify the bucket-arn name you'd like, otherwise the default = arn:aws:s3:::examplebucket
# @option --key <TEXT>            Specify the key name you'd like, otherwise the default = test/key
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::s3::batch-invocation() {
    :;
}
# }}}}} sam local generate-event s3 batch-invocation

# {{{{{ sam local generate-event s3 delete
# @cmd Generates an Amazon S3 Delete Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --bucket <TEXT>         Specify the bucket name you'd like, otherwise the default = example-bucket
# @option --key <TEXT>            Specify the key name you'd like, otherwise the default = test/key
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::s3::delete() {
    :;
}
# }}}}} sam local generate-event s3 delete

# {{{{{ sam local generate-event s3 put
# @cmd Generates an Amazon S3 Put Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --bucket <TEXT>         Specify the bucket name you'd like, otherwise the default = example-bucket
# @option --key <TEXT>            Specify the key name you'd like, otherwise the default = test/key
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::s3::put() {
    :;
}
# }}}}} sam local generate-event s3 put
# }}}} sam local generate-event s3

# {{{{ sam local generate-event sagemaker
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::sagemaker() {
    :;
}

# {{{{{ sam local generate-event sagemaker ground-truth-annotation-consolidation
# @cmd Generates a SageMaker Ground Truth AnnotationConsolidation request
# @option --region <TEXT>                        Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>                     Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>                    Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --labeling-job-name <TEXT>             Specify the labeling-job-name name you'd like, otherwise the default = example-job
# @option --label-attribute-name <TEXT>          Specify the label-attribute-name name you'd like, otherwise the default = example-attribute
# @option --s3-output-path <TEXT>                Specify the s3-output-path name you'd like, otherwise the default = s3://sagemakerexample/output
# @option --execution-role <TEXT>                Specify the execution-role name you'd like, otherwise the default = sagemaker-role
# @option --iteration-object-timestamp <TEXT>    Specify the iteration-object-timestamp name you'd like, otherwise the default = iteration-1/0/2019-09-06_18:35:03
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @flag -h --help                                Show this message and exit.
local::generate-event::sagemaker::ground-truth-annotation-consolidation() {
    :;
}
# }}}}} sam local generate-event sagemaker ground-truth-annotation-consolidation

# {{{{{ sam local generate-event sagemaker ground-truth-pre-human
# @cmd Generates a SageMaker Ground Truth PreHumanTask request
# @option --region <TEXT>               Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>            Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>           Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --source-ref <TEXT>           Specify the source-ref name you'd like, otherwise the default = s3://sagemakerexample/object_to_annotate.jpg
# @option --labeling-job-name <TEXT>    Specify the labeling-job-name name you'd like, otherwise the default = example-job
# @flag --debug                         Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>          Configuration file containing default parameter values.
# @option --config-env <TEXT>           Environment name specifying default parameter values in the configuration file.
# @flag -h --help                       Show this message and exit.
local::generate-event::sagemaker::ground-truth-pre-human() {
    :;
}
# }}}}} sam local generate-event sagemaker ground-truth-pre-human
# }}}} sam local generate-event sagemaker

# {{{{ sam local generate-event ses
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::ses() {
    :;
}

# {{{{{ sam local generate-event ses email-receiving
# @cmd Generates an Amazon SES Email Receiving Event
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --dns-suffix <TEXT>     Specify the dns-suffix name you'd like, otherwise the default = us-east-1.amazonaws.com
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::ses::email-receiving() {
    :;
}
# }}}}} sam local generate-event ses email-receiving
# }}}} sam local generate-event ses

# {{{{ sam local generate-event sns
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::sns() {
    :;
}

# {{{{{ sam local generate-event sns notification
# @cmd Generates an Amazon SNS Topic Notification Event
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --topic <TEXT>          Specify the topic name you'd like, otherwise the default = ExampleTopic
# @option --subject <TEXT>        Specify the subject name you'd like, otherwise the default = example subject
# @option --message <TEXT>        Specify the message name you'd like, otherwise the default = example message
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::sns::notification() {
    :;
}
# }}}}} sam local generate-event sns notification
# }}}} sam local generate-event sns

# {{{{ sam local generate-event sqs
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::sqs() {
    :;
}

# {{{{{ sam local generate-event sqs receive-message
# @cmd Generates an Amazon SQS Event
# @option --partition <TEXT>      Specify the partition name you'd like, otherwise the default = aws
# @option --region <TEXT>         Specify the region name you'd like, otherwise the default = us-east-1
# @option --account-id <TEXT>     Specify the account-id name you'd like, otherwise the default = 123456789012
# @option --queue-name <TEXT>     Specify the queue-name name you'd like, otherwise the default = MyQueue
# @option --body <TEXT>           Specify the body name you'd like, otherwise the default = Hello from SQS!
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::sqs::receive-message() {
    :;
}
# }}}}} sam local generate-event sqs receive-message
# }}}} sam local generate-event sqs

# {{{{ sam local generate-event stepfunctions
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::stepfunctions() {
    :;
}

# {{{{{ sam local generate-event stepfunctions error
# @cmd Generates an AWS StepFunctions Error Event
# @option --error <TEXT>          Specify the error name you'd like, otherwise the default = ErrorName
# @option --cause <TEXT>          Specify the cause name you'd like, otherwise the default = This is the cause of the error.
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @flag -h --help                 Show this message and exit.
local::generate-event::stepfunctions::error() {
    :;
}
# }}}}} sam local generate-event stepfunctions error
# }}}} sam local generate-event stepfunctions

# {{{{ sam local generate-event workmail
# @cmd
# @flag -h --help    Show this message and exit.
local::generate-event::workmail() {
    :;
}

# {{{{{ sam local generate-event workmail email
# @cmd Generates an Amazon Work Mail Event
# @option --flow-direction <TEXT>    Specify the flow-direction name you'd like, otherwise the default = INBOUND
# @option --mail-from <TEXT>         Specify the mail-from name you'd like, otherwise the default = from@example.com
# @option --sender <TEXT>            Specify the sender name you'd like, otherwise the default = sender@example.com
# @flag --debug                      Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --config-file <TEXT>       Configuration file containing default parameter values.
# @option --config-env <TEXT>        Environment name specifying default parameter values in the configuration file.
# @flag -h --help                    Show this message and exit.
local::generate-event::workmail::email() {
    :;
}
# }}}}} sam local generate-event workmail email
# }}}} sam local generate-event workmail
# }}} sam local generate-event

# {{{ sam local invoke
# @cmd Invoke AWS serverless functions locally.
# @option -t[yaml|yml|json]                      AWS SAM template which references built artifacts for resources in the template.
# @option --template[yaml|yml|json]              AWS SAM template which references built artifacts for resources in the template.
# @option --template-file[yaml|yml|json]         AWS SAM template which references built artifacts for resources in the template.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option -e --event <PATH>                      JSON file containing event data passed to the Lambda function during invoke.
# @option -n --env-vars <PATH>                   JSON file containing values for Lambda function's environment variables.
# @option --container-env-vars <PATH>            JSON file containing additional environment variables to be set within the container when used in a debugging session locally.
# @option -d --debug-port <INTEGER>              When specified, Lambda function container will start in debug mode and will expose this port on localhost.
# @option --debugger-path <TEXT>                 Host path to a debugger that will be mounted into the Lambda container.
# @option --debug-args <TEXT>                    Additional arguments to be passed to the debugger.
# @option -v --docker-volume-basedir <TEXT>      Specify the location basedir where the SAM template exists.
# @flag --skip-pull-image                        Skip pulling down the latest Docker image for Lambda runtime.
# @option --docker-network <TEXT>                Name or ID of an existing docker network for AWS Lambda docker containers to connect to, along with the default bridge network.
# @flag --force-image-build                      Force rebuilding the image used for invoking functions with layers.
# @flag --shutdown                               Emulate a shutdown event after invoke completes, to test extension handling of shutdown behavior.
# @option --container-host <TEXT>                Host of locally emulated Lambda container.
# @option --container-host-interface <TEXT>      IP address of the host network interface that container ports should bind to.
# @option --add-host <LIST>                      Passes a hostname to IP address mapping to the Docker container's host file.
# @option -ii <TEXT>                             Container image URIs for invoking functions or starting api and function.
# @option --invoke-image <TEXT>                  Container image URIs for invoking functions or starting api and function.
# @option -r --runtime[dotnet8|dotnet6|go1] <dotnet8|dotnet6|go1.x|java21|java17|java11|java8.al2|nodejs22.x|nodejs20.x|nodejs18.x|nodejs16.x|provided|provided.al2|provided.al2023|python3.9|python3.8|python3.13|python3.12|python3.11|python3.10|ruby3.4|ruby3.3|ruby3.2>  Lambda runtime used to invoke the function.
# @flag --mount-symlinks                         Specify if symlinks at the top level of the code should be mounted inside the container.
# @flag --no-mount-symlinks                      Specify if symlinks at the top level of the code should be mounted inside the container.
# @flag --no-memory-limit                        Removes the Memory limit during emulation.
# @option -l --log-file <TEXT>                   File to capture output logs.
# @option --layer-cache-basedir <DIRECTORY>      Specify the location basedir where the lambda layers used by the template will be downloaded to.
# @option --hook-name <TEXT>                     Hook package id to extend AWS SAM CLI commands functionality.
# @flag --skip-prepare-infra                     Skip preparation stage when there are no infrastructure changes.
# @flag --prepare-infra                          Skip preparation stage when there are no infrastructure changes.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @option --terraform-plan-file <PATH>           Used for passing a custom plan file when executing the Terraform hook.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                                Show this message and exit.
# @arg function_logical_id
local::invoke() {
    :;
}
# }}} sam local invoke

# {{{ sam local start-api
# @cmd Run & test AWS serverless functions locally as a HTTP API.
# @option -t[yaml|yml|json]                      AWS SAM template which references built artifacts for resources in the template.
# @option --template[yaml|yml|json]              AWS SAM template which references built artifacts for resources in the template.
# @option --template-file[yaml|yml|json]         AWS SAM template which references built artifacts for resources in the template.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option --host <TEXT>                          Local hostname or IP address to bind to (default: '127.0.0.1')
# @option -p --port <INTEGER>                    Local port number to listen on (default: '3000')
# @option --ssl-cert-file <PATH>                 Path to SSL certificate file (default: None)
# @option --ssl-key-file <PATH>                  Path to SSL key file (default: None)
# @option -n --env-vars <PATH>                   JSON file containing values for Lambda function's environment variables.
# @option --container-env-vars <PATH>            JSON file containing additional environment variables to be set within the container when used in a debugging session locally.
# @option -d --debug-port <INTEGER>              When specified, Lambda function container will start in debug mode and will expose this port on localhost.
# @option --debugger-path <TEXT>                 Host path to a debugger that will be mounted into the Lambda container.
# @option --debug-args <TEXT>                    Additional arguments to be passed to the debugger.
# @option --debug-function <TEXT>                Optional.
# @option -v --docker-volume-basedir <TEXT>      Specify the location basedir where the SAM template exists.
# @flag --skip-pull-image                        Skip pulling down the latest Docker image for Lambda runtime.
# @option --docker-network <TEXT>                Name or ID of an existing docker network for AWS Lambda docker containers to connect to, along with the default bridge network.
# @flag --force-image-build                      Force rebuilding the image used for invoking functions with layers.
# @flag --no-memory-limit                        Removes the Memory limit during emulation.
# @option --warm-containers <EAGER|LAZY>         Optional.
# @flag --shutdown                               Emulate a shutdown event after invoke completes, to test extension handling of shutdown behavior.
# @option --container-host <TEXT>                Host of locally emulated Lambda container.
# @option --container-host-interface <TEXT>      IP address of the host network interface that container ports should bind to.
# @option --add-host <LIST>                      Passes a hostname to IP address mapping to the Docker container's host file.
# @option -ii <TEXT>                             Container image URIs for invoking functions or starting api and function.
# @option --invoke-image <TEXT>                  Container image URIs for invoking functions or starting api and function.
# @flag --disable-authorizer                     Disable custom Lambda Authorizers from being parsed and invoked.
# @option -l --log-file <TEXT>                   File to capture output logs.
# @option --layer-cache-basedir <DIRECTORY>      Specify the location basedir where the lambda layers used by the template will be downloaded to.
# @option -s --static-dir <TEXT>                 Any static assets (e.g. CSS/Javascript/HTML) files located in this directory will be presented at /
# @option --hook-name <TEXT>                     Hook package id to extend AWS SAM CLI commands functionality.
# @flag --skip-prepare-infra                     Skip preparation stage when there are no infrastructure changes.
# @flag --prepare-infra                          Skip preparation stage when there are no infrastructure changes.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @option --terraform-plan-file <PATH>           Used for passing a custom plan file when executing the Terraform hook.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                                Show this message and exit.
local::start-api() {
    :;
}
# }}} sam local start-api

# {{{ sam local start-lambda
# @cmd Emulate AWS serverless functions locally.
# @option -t[yaml|yml|json]                      AWS SAM template which references built artifacts for resources in the template.
# @option --template[yaml|yml|json]              AWS SAM template which references built artifacts for resources in the template.
# @option --template-file[yaml|yml|json]         AWS SAM template which references built artifacts for resources in the template.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option --host <TEXT>                          Local hostname or IP address to bind to (default: '127.0.0.1')
# @option -p --port <INTEGER>                    Local port number to listen on (default: '3001')
# @option -n --env-vars <PATH>                   JSON file containing values for Lambda function's environment variables.
# @option --warm-containers <EAGER|LAZY>         Optional.
# @option --container-env-vars <PATH>            JSON file containing additional environment variables to be set within the container when used in a debugging session locally.
# @option --debug-function <TEXT>                Optional.
# @option -d --debug-port <INTEGER>              When specified, Lambda function container will start in debug mode and will expose this port on localhost.
# @option --debugger-path <TEXT>                 Host path to a debugger that will be mounted into the Lambda container.
# @option --debug-args <TEXT>                    Additional arguments to be passed to the debugger.
# @option -v --docker-volume-basedir <TEXT>      Specify the location basedir where the SAM template exists.
# @flag --skip-pull-image                        Skip pulling down the latest Docker image for Lambda runtime.
# @option --docker-network <TEXT>                Name or ID of an existing docker network for AWS Lambda docker containers to connect to, along with the default bridge network.
# @flag --force-image-build                      Force rebuilding the image used for invoking functions with layers.
# @flag --shutdown                               Emulate a shutdown event after invoke completes, to test extension handling of shutdown behavior.
# @option --container-host <TEXT>                Host of locally emulated Lambda container.
# @option --container-host-interface <TEXT>      IP address of the host network interface that container ports should bind to.
# @option --add-host <LIST>                      Passes a hostname to IP address mapping to the Docker container's host file.
# @option -ii <TEXT>                             Container image URIs for invoking functions or starting api and function.
# @option --invoke-image <TEXT>                  Container image URIs for invoking functions or starting api and function.
# @flag --no-memory-limit                        Removes the Memory limit during emulation.
# @option -l --log-file <TEXT>                   File to capture output logs.
# @option --layer-cache-basedir <DIRECTORY>      Specify the location basedir where the lambda layers used by the template will be downloaded to.
# @option --hook-name <TEXT>                     Hook package id to extend AWS SAM CLI commands functionality.
# @flag --skip-prepare-infra                     Skip preparation stage when there are no infrastructure changes.
# @flag --prepare-infra                          Skip preparation stage when there are no infrastructure changes.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @option --terraform-plan-file <PATH>           Used for passing a custom plan file when executing the Terraform hook.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                                Show this message and exit.
local::start-lambda() {
    :;
}
# }}} sam local start-lambda
# }} sam local

# {{ sam validate
# @cmd Validate an AWS SAM template.
# @option -t[yaml|yml|json]                 AWS SAM template file.
# @option --template[yaml|yml|json]         AWS SAM template file.
# @option --template-file[yaml|yml|json]    AWS SAM template file.
# @flag --lint                              Run linting validation on template through cfn-lint.
# @option --region <TEXT>                   Set the AWS Region of the service.
# @option --profile <TEXT>                  Select a specific profile from your credential file to get AWS credentials.
# @option --config-env <TEXT>               Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>              Configuration file containing default parameter values.
# @flag --save-params                       Save the parameters provided via the command line to the configuration file.
# @flag --beta-features                     Enable/Disable beta features.
# @flag --no-beta-features                  Enable/Disable beta features.
# @flag --debug                             Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                           Show this message and exit.
validate() {
    :;
}
# }} sam validate

# {{ sam sync
# @cmd Sync an AWS SAM project to AWS.
# @option --stack-name <TEXT>                    Name of the AWS CloudFormation stack.
# @option -t[yaml|yml|json]                      AWS SAM template file.
# @option --template[yaml|yml|json]              AWS SAM template file.
# @option --template-file[yaml|yml|json]         AWS SAM template file.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --capabilities[CAPABILITY_IAM|CAPABILITY_NAMED_IAM|CAPABILITY_RESOURCE_POLICY|CAPABILITY_AUTO_EXPAND] <LIST,STRING>  List of capabilities that one must specify before AWS Cloudformation can create certain stacks.
# @option --s3-bucket <TEXT>                     AWS S3 bucket where artifacts referenced in the template are uploaded.
# @option --s3-prefix <TEXT>                     Prefix name that is added to the artifact's name when it is uploaded to the AWS S3 bucket.
# @option --image-repository <STRING>            AWS ECR repository URI where artifacts referenced in the template are uploaded.
# @option --image-repositories <LIST>            Mapping of Function Logical ID to AWS ECR Repository URI.
# @option --role-arn <TEXT>                      ARN of an IAM role that AWS Cloudformation assumes when executing a deployment change set.
# @option --kms-key-id <TEXT>                    The ID of an AWS KMS key that is used to encrypt artifacts that are at rest in the AWS S3 bucket.
# @option --notification-arns <LIST,STRING>      ARNs of SNS topics that AWS Cloudformation associates with the stack.
# @option --tags <STRING,LIST>                   List of tags to associate with the stack.
# @option --metadata <STRING>                    Map of metadata to attach to ALL the artifacts that are referenced in the template.
# @option -bi <TEXT>                             Container image URIs for building functions/layers.
# @option --build-image <TEXT>                   Container image URIs for building functions/layers.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @flag --watch                                  Watch local files and automatically sync with cloud.
# @flag --no-watch                               Watch local files and automatically sync with cloud.
# @flag --code                                   Sync ONLY code resources.
# @flag --skip-deploy-sync                       This option will skip the initial infrastructure deployment if it is not required by comparing the local template with the template deployed in cloud.
# @flag --no-skip-deploy-sync                    This option will skip the initial infrastructure deployment if it is not required by comparing the local template with the template deployed in cloud.
# @flag --dependency-layer                       Separate dependencies of individual function into a Lambda layer for improved performance.
# @flag --no-dependency-layer                    Separate dependencies of individual function into a Lambda layer for improved performance.
# @flag -u                                       Build functions within an AWS Lambda-like container.
# @flag --use-container                          Build functions within an AWS Lambda-like container.
# @flag --no-use-container                       Build functions within an AWS Lambda-like container.
# @option --resource-id <TEXT>                   Sync code for all the resources with the ID.
# @option --resource                             Sync code for all resources of the given resource type.
# @option -s --base-dir <DIRECTORY>              Resolve relative paths to function's source code with respect to this directory.
# @flag --build-in-source                        Opts in to build project in the source folder.
# @flag --no-build-in-source                     Opts in to build project in the source folder.
# @option --watch-exclude <LIST>                 Excludes a file or folder from being observed for file changes.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                                Show this message and exit.
sync() {
    :;
}
# }} sam sync

# {{ sam remote
# @cmd Invoke or send an event to cloud resources in your AWS Cloudformation stack.
# @flag -h --help    Show this message and exit.
remote() {
    :;
}

# {{{ sam remote invoke
# @cmd Invoke a deployed resource in the cloud
# @option --stack-name <TEXT>         Name of the stack to get the resource information from
# @option -e --event <TEXT>           The event that will be sent to the resource.
# @option --event-file <FILENAME>     The file that contains the event that will be sent to the resource.
# @option --test-event-name <TEXT>    Name of the remote test event to send to the resource
# @option --parameter <LIST>          Additional parameters that can be passed to invoke the resource.
# @option --output <text|json>        Output the results from the command in a given output format.
# @option --region <TEXT>             Set the AWS Region of the service.
# @option --profile <TEXT>            Select a specific profile from your credential file to get AWS credentials.
# @option --config-env <TEXT>         Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>        Configuration file containing default parameter values.
# @flag --save-params                 Save the parameters provided via the command line to the configuration file.
# @flag --beta-features               Enable/Disable beta features.
# @flag --no-beta-features            Enable/Disable beta features.
# @flag --debug                       Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                     Show this message and exit.
# @arg resource_id
remote::invoke() {
    :;
}
# }}} sam remote invoke

# {{{ sam remote test-event
# @cmd Manage remote test events
# @flag -h --help    Show this message and exit.
remote::test-event() {
    :;
}

# {{{{ sam remote test-event delete
# @cmd Delete a remote test event for a function
# @option --stack-name <TEXT>     Name of the stack to get the resource information from
# @option --name <TEXT>           Name of the event to be deleted  [required]
# @option --region <TEXT>         Set the AWS Region of the service.
# @option --profile <TEXT>        Select a specific profile from your credential file to get AWS credentials.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @flag --beta-features           Enable/Disable beta features.
# @flag --no-beta-features        Enable/Disable beta features.
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                 Show this message and exit.
# @arg resource_id
remote::test-event::delete() {
    :;
}
# }}}} sam remote test-event delete

# {{{{ sam remote test-event get
# @cmd Get the contents of a remote test event
# @option --stack-name <TEXT>         Name of the stack to get the resource information from
# @option --name <TEXT>               Name of the event to be retrieved [required]
# @option --output-file <FILENAME>    File path to save the event contents.
# @option --region <TEXT>             Set the AWS Region of the service.
# @option --profile <TEXT>            Select a specific profile from your credential file to get AWS credentials.
# @option --config-env <TEXT>         Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>        Configuration file containing default parameter values.
# @flag --beta-features               Enable/Disable beta features.
# @flag --no-beta-features            Enable/Disable beta features.
# @flag --debug                       Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                     Show this message and exit.
# @arg resource_id
remote::test-event::get() {
    :;
}
# }}}} sam remote test-event get

# {{{{ sam remote test-event list
# @cmd List remote test events for a function
# @option --stack-name <TEXT>     Name of the stack to get the resource information from
# @option --region <TEXT>         Set the AWS Region of the service.
# @option --profile <TEXT>        Select a specific profile from your credential file to get AWS credentials.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @flag --beta-features           Enable/Disable beta features.
# @flag --no-beta-features        Enable/Disable beta features.
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                 Show this message and exit.
# @arg resource_id
remote::test-event::list() {
    :;
}
# }}}} sam remote test-event list

# {{{{ sam remote test-event put
# @cmd Put a remote test event.
# @option --stack-name <TEXT>     Name of the stack to get the resource information from
# @option --name <TEXT>           Name of the event to be put  [required]
# @option --file <FILENAME>       File with the contents of the event to be saved (or `-` for stdin)
# @flag -f --force                Force saving the event even if it already exists
# @option --region <TEXT>         Set the AWS Region of the service.
# @option --profile <TEXT>        Select a specific profile from your credential file to get AWS credentials.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @flag --beta-features           Enable/Disable beta features.
# @flag --no-beta-features        Enable/Disable beta features.
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                 Show this message and exit.
# @arg resource_id
remote::test-event::put() {
    :;
}
# }}}} sam remote test-event put
# }}} sam remote test-event
# }} sam remote

# {{ sam package
# @cmd Package an AWS SAM application.
# @option --s3-bucket <TEXT>                AWS S3 bucket where artifacts referenced in the template are uploaded.
# @flag --resolve-s3                        Automatically resolve AWS S3 bucket for non-guided deployments.
# @flag --no-resolve-s3                     Automatically resolve AWS S3 bucket for non-guided deployments.
# @option --region <TEXT>                   Set the AWS Region of the service.
# @option --profile <TEXT>                  Select a specific profile from your credential file to get AWS credentials.
# @option --s3-prefix <TEXT>                Prefix name that is added to the artifact's name when it is uploaded to the AWS S3 bucket.
# @option --image-repository <STRING>       AWS ECR repository URI where artifacts referenced in the template are uploaded.
# @option --image-repositories <LIST>       Mapping of Function Logical ID to AWS ECR Repository URI.
# @option --kms-key-id <TEXT>               The ID of an AWS KMS key that is used to encrypt artifacts that are at rest in the AWS S3 bucket.
# @option --metadata <STRING>               Map of metadata to attach to ALL the artifacts that are referenced in the template.
# @flag --force-upload                      Indicates whether to override existing files in the S3 bucket.
# @option --config-env <TEXT>               Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>              Configuration file containing default parameter values.
# @flag --save-params                       Save the parameters provided via the command line to the configuration file.
# @flag --no-progressbar                    Does not showcase a progress bar when uploading artifacts to S3 and pushing docker images to ECR
# @option --signing-profiles <STRING>       A string that contains Code Sign configuration parameters as FunctionOrL ayerNameToSign=SigningProfileName:Signi ngProfileOwner Since signing profile owner is optional, it could also be written as FunctionOrLayerNameToSign=Si gningProfileName
# @option -t[yaml|yml|json]                 AWS SAM template which references built artifacts for resources in the template.
# @option --template[yaml|yml|json]         AWS SAM template which references built artifacts for resources in the template.
# @option --template-file[yaml|yml|json]    AWS SAM template which references built artifacts for resources in the template.
# @option --output-template-file <PATH>     The path to the file where the command writes the output AWS CloudFormation template.
# @flag --use-json                          Indicates whether to use JSON as the format for the output AWS CloudFormation template.
# @flag --beta-features                     Enable/Disable beta features.
# @flag --no-beta-features                  Enable/Disable beta features.
# @flag --debug                             Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                           Show this message and exit.
package() {
    :;
}
# }} sam package

# {{ sam deploy
# @cmd Deploy an AWS SAM application.
# @option --stack-name <TEXT>                    Name of the AWS CloudFormation stack.
# @option --capabilities[CAPABILITY_IAM|CAPABILITY_NAMED_IAM|CAPABILITY_RESOURCE_POLICY|CAPABILITY_AUTO_EXPAND] <LIST,STRING>  List of capabilities that one must specify before AWS Cloudformation can create certain stacks.
# @flag --resolve-s3                             Automatically resolve AWS S3 bucket for non-guided deployments.
# @flag --no-resolve-s3                          Automatically resolve AWS S3 bucket for non-guided deployments.
# @flag -g --guided                              Specify this flag to allow SAM CLI to guide you through the deployment using guided prompts.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --s3-bucket <TEXT>                     AWS S3 bucket where artifacts referenced in the template are uploaded.
# @option --s3-prefix <TEXT>                     Prefix name that is added to the artifact's name when it is uploaded to the AWS S3 bucket.
# @flag --resolve-image-repos                    Automatically create and delete ECR repositories for image-based functions in non-guided deployments.
# @option --image-repository <STRING>            AWS ECR repository URI where artifacts referenced in the template are uploaded.
# @option --image-repositories <LIST>            Mapping of Function Logical ID to AWS ECR Repository URI.
# @option --role-arn <TEXT>                      ARN of an IAM role that AWS Cloudformation assumes when executing a deployment change set.
# @option --kms-key-id <TEXT>                    The ID of an AWS KMS key that is used to encrypt artifacts that are at rest in the AWS S3 bucket.
# @option --notification-arns <LIST,STRING>      ARNs of SNS topics that AWS Cloudformation associates with the stack.
# @option --tags <STRING,LIST>                   List of tags to associate with the stack.
# @option --metadata <STRING>                    Map of metadata to attach to ALL the artifacts that are referenced in the template.
# @flag --no-execute-changeset                   Indicates whether to execute the change set.
# @flag --fail-on-empty-changeset                Specify whether AWS SAM CLI should return a non-zero exit code if there are no changes to be made to the stack.
# @flag --no-fail-on-empty-changeset             Specify whether AWS SAM CLI should return a non-zero exit code if there are no changes to be made to the stack.
# @flag --confirm-changeset                      Prompt to confirm if the computed changeset is to be deployed by SAM CLI.
# @flag --no-confirm-changeset                   Prompt to confirm if the computed changeset is to be deployed by SAM CLI.
# @flag --disable-rollback                       Preserves the state of previously provisioned resources when an operation fails.
# @flag --no-disable-rollback                    Preserves the state of previously provisioned resources when an operation fails.
# @option --on-failure <ROLLBACK|DELETE|DO_NOTHING>  Provide an action to determine what will happen when a stack fails to create.
# @flag --force-upload                           Indicates whether to override existing files in the S3 bucket.
# @option --max-wait-duration <INTEGER>          Maximum duration in minutes to wait for the deployment to complete.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @flag --no-progressbar                         Does not showcase a progress bar when uploading artifacts to S3 and pushing docker images to ECR
# @option --signing-profiles <STRING>            A string that contains Code Sign configuration parameters as FunctionO rLayerNameToSign=SigningProfileName:S igningProfileOwner Since signing profile owner is optional, it could also be written as FunctionOrLayerNam eToSign=SigningProfileName
# @option -t[yaml|yml|json]                      AWS SAM template which references built artifacts for resources in the template.
# @option --template[yaml|yml|json]              AWS SAM template which references built artifacts for resources in the template.
# @option --template-file[yaml|yml|json]         AWS SAM template which references built artifacts for resources in the template.
# @flag --use-json                               Indicates whether to use JSON as the format for the output AWS CloudFormation template.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                                Show this message and exit.
deploy() {
    :;
}
# }} sam deploy

# {{ sam logs
# @cmd Fetch AWS Cloudwatch logs for AWS Lambda Functions or Cloudwatch Log groups.
# @option --stack-name <TEXT>       Name of the AWS CloudFormation stack that the function is a part of.
# @option --cw-log-group <TEXT>     Additional CloudWatch Log group names that are not auto-discovered based upon --name parameter.
# @option -n --name <TEXT>          The name of the resource for which to fetch logs.
# @option --region <TEXT>           Set the AWS Region of the service.
# @option --profile <TEXT>          Select a specific profile from your credential file to get AWS credentials.
# @flag -i --include-traces         Include the XRay traces in the log output.
# @option --filter <TEXT>           You can specify an expression to quickly find logs that match terms, phrases or values in your log events.
# @option --output <text|json>      The formatting style of the command output.
# @flag -t --tail                   Tail events.
# @option -s --start-time <TEXT>    Fetch events starting at this time.
# @option -e --end-time <TEXT>      Fetch events up to this time.
# @option --config-env <TEXT>       Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>      Configuration file containing default parameter values.
# @flag --save-params               Save the parameters provided via the command line to the configuration file.
# @flag --beta-features             Enable/Disable beta features.
# @flag --no-beta-features          Enable/Disable beta features.
# @flag --debug                     Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag -h --help                   Show this message and exit.
logs() {
    :;
}
# }} sam logs

# {{ sam traces
# @cmd Fetch AWS X-Ray traces.
# @option --config-env <TEXT>       Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>      Configuration file containing default parameter values.
# @option -ti <TEXT>                Fetch specific trace by providing its id
# @option --trace-id <TEXT>         Fetch specific trace by providing its id
# @flag -t --tail                   Tail events.
# @option --output <text|json>      The formatting style of the command output.
# @option -e --end-time <TEXT>      Fetch events up to this time.
# @option -s --start-time <TEXT>    Fetch events starting at this time.
# @flag --beta-features             Enable/Disable beta features.
# @flag --no-beta-features          Enable/Disable beta features.
# @flag --debug                     Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --profile <TEXT>          Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>           Set the AWS Region of the service.
# @flag --save-params               Save the parameters provided via the command line to the configuration file.
# @flag -h --help                   Show this message and exit.
traces() {
    :;
}
# }} sam traces

# {{ sam list
# @cmd Fetch the state of your AWS serverless application.
# @flag -h --help    Show this message and exit.
list() {
    :;
}

# {{{ sam list endpoints
# @cmd Get a summary of the cloud endpoints in the stack.
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --stack-name <TEXT>                    Name of corresponding deployed stack.(Not including a stack name will only show local resources defined in the template.)
# @option --output <json|table>                  Output the results from the command in a given output format (json or table).
# @option -t[yaml|yml|json]                      AWS SAM template file.
# @option --template[yaml|yml|json]              AWS SAM template file.
# @option --template-file[yaml|yml|json]         AWS SAM template file.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @flag -h --help                                Show this message and exit.
list::endpoints() {
    :;
}
# }}} sam list endpoints

# {{{ sam list resources
# @cmd Get a list of resources that will be deployed to...
# @option --config-env <TEXT>                    Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                   Configuration file containing default parameter values.
# @option --parameter-overrides <STRING,LIST>    String that contains AWS CloudFormation parameter overrides encoded as key=value pairs.
# @option --stack-name <TEXT>                    Name of corresponding deployed stack.(Not including a stack name will only show local resources defined in the template.)
# @option --output <json|table>                  Output the results from the command in a given output format (json or table).
# @option -t[yaml|yml|json]                      AWS SAM template file.
# @option --template[yaml|yml|json]              AWS SAM template file.
# @option --template-file[yaml|yml|json]         AWS SAM template file.
# @option --profile <TEXT>                       Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>                        Set the AWS Region of the service.
# @flag --beta-features                          Enable/Disable beta features.
# @flag --no-beta-features                       Enable/Disable beta features.
# @flag --debug                                  Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --save-params                            Save the parameters provided via the command line to the configuration file.
# @flag -h --help                                Show this message and exit.
list::resources() {
    :;
}
# }}} sam list resources

# {{{ sam list stack-outputs
# @cmd Get the stack outputs as defined in the...
# @option --stack-name <TEXT>      Name of corresponding deployed stack.
# @option --config-env <TEXT>      Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>     Configuration file containing default parameter values.
# @option --output <json|table>    Output the results from the command in a given output format (json or table).
# @option --profile <TEXT>         Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>          Set the AWS Region of the service.
# @flag --beta-features            Enable/Disable beta features.
# @flag --no-beta-features         Enable/Disable beta features.
# @flag --debug                    Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --save-params              Save the parameters provided via the command line to the configuration file.
# @flag -h --help                  Show this message and exit.
list::stack-outputs() {
    :;
}
# }}} sam list stack-outputs
# }} sam list

# {{ sam delete
# @cmd Delete an AWS SAM application and the artifacts created by sam deploy.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @option --stack-name <TEXT>     The name of the AWS CloudFormation stack you want to delete.
# @flag --no-prompts              Specify this flag to allow SAM CLI to skip through the guided prompts.
# @option --s3-bucket <TEXT>      The S3 bucket path you want to delete.
# @option --s3-prefix <TEXT>      The S3 prefix you want to delete
# @option --profile <TEXT>        Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>         Set the AWS Region of the service.
# @flag --beta-features           Enable/Disable beta features.
# @flag --no-beta-features        Enable/Disable beta features.
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --save-params             Save the parameters provided via the command line to the configuration file.
# @flag -h --help                 Show this message and exit.
delete() {
    :;
}
# }} sam delete

# {{ sam pipeline
# @cmd Manage the continuous delivery of your AWS serverless application.
# @flag -h --help    Show this message and exit.
pipeline() {
    :;
}

# {{{ sam pipeline bootstrap
# @cmd Generates the required AWS resources to connect your CI/CD system.
# @option --config-env <TEXT>                  Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>                 Configuration file containing default parameter values.
# @flag --interactive                          Disable interactive prompting for bootstrap parameters, and fail if any required arguments are missing.
# @flag --no-interactive                       Disable interactive prompting for bootstrap parameters, and fail if any required arguments are missing.
# @option --stage <TEXT>                       The name of the corresponding deployment stage.
# @option --pipeline-user <TEXT>               The Amazon Resource Name (ARN) of the IAM user having its access key ID and secret access key shared with the CI/CD system.
# @option --pipeline-execution-role <TEXT>     The ARN of the IAM role to be assumed by the pipeline user to operate on this stage.
# @option --cloudformation-execution-role <TEXT>  The ARN of the IAM role to be assumed by the AWS CloudFormation service while deploying the application's stack.
# @option --bucket <TEXT>                      The ARN of the Amazon S3 bucket to hold the AWS SAM artifacts.
# @flag --create-image-repository              If set to true and no ECR image repository is provided, this command will create an ECR image repository to hold the container images of Lambda functions having an Image package type.
# @flag --no-create-image-repository           If set to true and no ECR image repository is provided, this command will create an ECR image repository to hold the container images of Lambda functions having an Image package type.
# @option --image-repository <TEXT>            The ARN of an Amazon ECR image repository to hold the container images of Lambda functions or layers that have a package type of Image.
# @flag --confirm-changeset                    Prompt to confirm if the resources are to be deployed.
# @flag --no-confirm-changeset                 Prompt to confirm if the resources are to be deployed.
# @option --permissions-provider <oidc|iam>    Choose a permissions provider to assume the pipeline execution role.
# @option --oidc-provider-url <TEXT>           The URL of the OIDC provider.
# @option --oidc-client-id <TEXT>              The client ID configured to use with the OIDC provider.
# @option --github-org <TEXT>                  The GitHub organization that the repository belongs to.
# @option --github-repo <TEXT>                 The name of the GitHub Repository that deployments will occur from.
# @option --deployment-branch <TEXT>           The name of the branch that deployments will occur from.
# @option --oidc-provider[github-actions|gitlab|bitbucket-pipelines]  The name of the CI/CD system that will be used for OIDC permissions Currently supported CI/CD systems are : GitLab, GitHub and Bitbucket
# @option --gitlab-group <TEXT>                The GitLab group that the repository belongs to.
# @option --gitlab-project <TEXT>              The GitLab project name.
# @option --bitbucket-repo-uuid <TEXT>         The UUID of the Bitbucket repository.
# @option --cicd-provider <TEXT>               The CICD platform for the SAM Pipeline
# @flag --beta-features                        Enable/Disable beta features.
# @flag --no-beta-features                     Enable/Disable beta features.
# @flag --debug                                Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @option --profile <TEXT>                     Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>                      Set the AWS Region of the service.
# @flag --save-params                          Save the parameters provided via the command line to the configuration file.
# @flag -h --help                              Show this message and exit.
pipeline::bootstrap() {
    :;
}
# }}} sam pipeline bootstrap

# {{{ sam pipeline init
# @cmd Generates a CI/CD pipeline configuration file.
# @option --config-env <TEXT>     Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>    Configuration file containing default parameter values.
# @flag --bootstrap               Enable interactive mode that walks the user through creating necessary AWS infrastructure resources.
# @flag --beta-features           Enable/Disable beta features.
# @flag --no-beta-features        Enable/Disable beta features.
# @flag --debug                   Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --save-params             Save the parameters provided via the command line to the configuration file.
# @flag -h --help                 Show this message and exit.
pipeline::init() {
    :;
}
# }}} sam pipeline init
# }} sam pipeline

# {{ sam publish
# @cmd Publish a packaged AWS SAM template to AWS Serverless Application Repository for easy sharing.
# @option --config-env <TEXT>               Environment name specifying default parameter values in the configuration file.
# @option --config-file <TEXT>              Configuration file containing default parameter values.
# @option -t[yaml|yml|json]                 AWS SAM template which references built artifacts for resources in the template.
# @option --template[yaml|yml|json]         AWS SAM template which references built artifacts for resources in the template.
# @option --template-file[yaml|yml|json]    AWS SAM template which references built artifacts for resources in the template.
# @option --semantic-version <TEXT>         Optional.
# @flag --fail-on-same-version              If set, AWS SAM CLI will prevent a publish and return a non-zero exit code if the publish is attempted with a semantic version that already exists on the SAR application.
# @option --profile <TEXT>                  Select a specific profile from your credential file to get AWS credentials.
# @option --region <TEXT>                   Set the AWS Region of the service.
# @flag --beta-features                     Enable/Disable beta features.
# @flag --no-beta-features                  Enable/Disable beta features.
# @flag --debug                             Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.
# @flag --save-params                       Save the parameters provided via the command line to the configuration file.
# @flag -h --help                           Show this message and exit.
publish() {
    :;
}
# }} sam publish

command eval "$(argc --argc-eval "$0" "$@")"